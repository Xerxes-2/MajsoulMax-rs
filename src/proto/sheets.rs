// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AbMatchMatchInfo {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub ab_match_activity_id: u32,
    #[prost(uint32, tag = "3")]
    pub match_activity_id: u32,
    #[prost(string, tag = "4")]
    pub desktop_id_list: ::prost::alloc::string::String,
    #[prost(uint32, tag = "5")]
    pub consume_id: u32,
    #[prost(string, tag = "6")]
    pub buy_in_condition: ::prost::alloc::string::String,
    #[prost(uint32, tag = "7")]
    pub mail_template_id: u32,
    #[prost(uint32, tag = "8")]
    pub max_match_count: u32,
    #[prost(uint32, tag = "9")]
    pub reward_id: u32,
    #[prost(uint32, tag = "10")]
    pub point_id: u32,
    #[prost(uint32, tag = "11")]
    pub match_level: u32,
    #[prost(uint32, tag = "12")]
    pub priority: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AbMatchPoint {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub rank: u32,
    #[prost(string, tag = "3")]
    pub desktop_id_list: ::prost::alloc::string::String,
    #[prost(uint32, tag = "4")]
    pub point: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AbMatchRewardSeq {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub point_lower: u32,
    #[prost(uint32, tag = "3")]
    pub point_upper: u32,
    #[prost(string, tag = "4")]
    pub reward: ::prost::alloc::string::String,
    #[prost(uint32, tag = "5")]
    pub chest_mark: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AbMatchConsumeSeq {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub match_count: u32,
    #[prost(uint32, tag = "3")]
    pub item_id: u32,
    #[prost(uint32, tag = "4")]
    pub item_count: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AchievementAchievement {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub name_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub name_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub name_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub name_en: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub name_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub desc_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub desc_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub desc_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "10")]
    pub desc_en: ::prost::alloc::string::String,
    #[prost(string, tag = "11")]
    pub desc_kr: ::prost::alloc::string::String,
    #[prost(uint32, tag = "12")]
    pub rare: u32,
    #[prost(uint32, tag = "13")]
    pub locked: u32,
    #[prost(uint32, tag = "14")]
    pub group_id: u32,
    #[prost(uint32, tag = "15")]
    pub sort: u32,
    #[prost(uint32, tag = "16")]
    pub segment_id: u32,
    #[prost(uint32, tag = "17")]
    pub base_task: u32,
    #[prost(string, tag = "18")]
    pub reward: ::prost::alloc::string::String,
    #[prost(uint32, tag = "19")]
    pub hidden: u32,
    #[prost(uint32, tag = "20")]
    pub deprecated: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AchievementAchievementGroup {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub name_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub name_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub name_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub name_en: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub name_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub img: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub reward: ::prost::alloc::string::String,
    #[prost(uint32, tag = "9")]
    pub percentage: u32,
    #[prost(uint32, tag = "10")]
    pub deprecated: u32,
    #[prost(uint32, tag = "11")]
    pub sort: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityActivity {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub name_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub name_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub name_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub name_en: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub name_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub r#type: ::prost::alloc::string::String,
    #[prost(uint32, tag = "10")]
    pub need_popout: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityTask {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub activity_id: u32,
    #[prost(uint32, tag = "3")]
    pub day: u32,
    #[prost(uint32, tag = "4")]
    pub base_task_id: u32,
    #[prost(uint32, tag = "5")]
    pub reward_id: u32,
    #[prost(uint32, tag = "6")]
    pub reward_count: u32,
    #[prost(string, tag = "7")]
    pub hidden_reward: ::prost::alloc::string::String,
    #[prost(uint32, tag = "8")]
    pub limit_id: u32,
    #[prost(uint32, tag = "9")]
    pub deprecated: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityExchange {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub activity_id: u32,
    #[prost(uint32, tag = "3")]
    pub reward_id: u32,
    #[prost(uint32, tag = "4")]
    pub reward_count: u32,
    #[prost(uint32, tag = "5")]
    pub consume_id: u32,
    #[prost(uint32, tag = "6")]
    pub consume_count: u32,
    #[prost(int32, tag = "7")]
    pub exchange_limit: i32,
    #[prost(uint32, tag = "8")]
    pub item_limit_id: u32,
    #[prost(uint32, tag = "9")]
    pub item_limit_count: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityChestUp {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(uint32, tag = "2")]
    pub chest_id: u32,
    #[prost(uint32, tag = "4")]
    pub title_str_id: u32,
    #[prost(string, tag = "5")]
    pub str_id: ::prost::alloc::string::String,
    #[prost(uint32, tag = "6")]
    pub chara_str_id: u32,
    #[prost(uint32, tag = "7")]
    pub item_str_id: u32,
    #[prost(string, tag = "8")]
    pub img: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub title_img: ::prost::alloc::string::String,
    #[prost(uint32, tag = "10")]
    pub typeset: u32,
    #[prost(uint32, tag = "11")]
    pub up_items_type: u32,
    #[prost(uint32, repeated, tag = "12")]
    pub up_items: ::prost::alloc::vec::Vec<u32>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityGameTask {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub activity_id: u32,
    #[prost(uint32, tag = "3")]
    pub base_task_id: u32,
    #[prost(uint32, tag = "4")]
    pub reward_id: u32,
    #[prost(uint32, tag = "5")]
    pub reward_count: u32,
    #[prost(string, tag = "6")]
    pub hidden_reward: ::prost::alloc::string::String,
    #[prost(uint32, tag = "7")]
    pub limit_id: u32,
    #[prost(uint32, tag = "8")]
    pub deprecated: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityGamePoint {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub activity_id: u32,
    #[prost(uint32, tag = "3")]
    pub point_id: u32,
    #[prost(uint32, tag = "4")]
    pub point: u32,
    #[prost(uint32, tag = "5")]
    pub res_id: u32,
    #[prost(uint32, tag = "6")]
    pub res_count: u32,
    #[prost(int32, tag = "7")]
    pub unlock_day: i32,
    #[prost(uint32, tag = "8")]
    pub node_mark: u32,
    #[prost(uint32, tag = "9")]
    pub image_mark: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityRank {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(uint32, tag = "2")]
    pub leaderboard_id: u32,
    #[prost(uint32, tag = "3")]
    pub rank_reward_id: u32,
    #[prost(uint32, tag = "4")]
    pub require_point: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityRankReward {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub lower_rank_bound: u32,
    #[prost(string, tag = "3")]
    pub reward: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityFlipTask {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub activity_id: u32,
    #[prost(uint32, tag = "3")]
    pub base_task_id: u32,
    #[prost(string, tag = "4")]
    pub reward: ::prost::alloc::string::String,
    #[prost(uint32, tag = "5")]
    pub matrix_x: u32,
    #[prost(uint32, tag = "6")]
    pub matrix_y: u32,
    #[prost(uint32, tag = "7")]
    pub is_reward: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityFlipInfo {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub flip_count: u32,
    #[prost(string, tag = "3")]
    pub init_task_list: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub start_time: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub end_time: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityDailySign {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(uint32, tag = "2")]
    pub reward_id: u32,
    #[prost(uint32, tag = "3")]
    pub reward_count: u32,
    #[prost(uint32, tag = "4")]
    pub day: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityRichmanInfo {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(uint32, tag = "2")]
    pub map_id: u32,
    #[prost(uint32, tag = "3")]
    pub map_distance: u32,
    #[prost(uint32, tag = "4")]
    pub chest_id: u32,
    #[prost(uint32, tag = "5")]
    pub consume_item_id: u32,
    #[prost(uint32, tag = "6")]
    pub special_item_id: u32,
    #[prost(uint32, tag = "7")]
    pub step_bank_save: u32,
    #[prost(uint32, tag = "8")]
    pub finish_bank_save: u32,
    #[prost(uint32, tag = "9")]
    pub finish_reward_seq: u32,
    #[prost(uint32, tag = "10")]
    pub step_exp: u32,
    #[prost(uint32, tag = "11")]
    pub finish_exp: u32,
    #[prost(uint32, tag = "12")]
    pub item_worth_pool: u32,
    #[prost(uint32, tag = "13")]
    pub min_avg_worth: u32,
    #[prost(uint32, tag = "14")]
    pub max_avg_worth: u32,
    #[prost(uint32, tag = "15")]
    pub chest_pool_seq: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityRichmanMap {
    #[prost(uint32, tag = "1")]
    pub map_id: u32,
    #[prost(uint32, tag = "2")]
    pub location: u32,
    #[prost(uint32, tag = "3")]
    pub pos_x: u32,
    #[prost(uint32, tag = "4")]
    pub pos_y: u32,
    #[prost(uint32, tag = "5")]
    pub piece_face: u32,
    #[prost(uint32, tag = "6")]
    pub r#type: u32,
    #[prost(uint32, tag = "7")]
    pub param: u32,
    #[prost(uint32, tag = "8")]
    pub bonus_type: u32,
    #[prost(uint32, tag = "9")]
    pub worth: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityRichmanLevel {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(string, tag = "2")]
    pub name: ::prost::alloc::string::String,
    #[prost(uint32, tag = "3")]
    pub id: u32,
    #[prost(uint32, tag = "4")]
    pub exp: u32,
    #[prost(uint32, tag = "5")]
    pub buff: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityRichmanEvent {
    #[prost(uint32, tag = "1")]
    pub event_id: u32,
    #[prost(uint32, tag = "2")]
    pub activity_id: u32,
    #[prost(uint32, tag = "3")]
    pub event_type: u32,
    #[prost(uint32, tag = "4")]
    pub weight: u32,
    #[prost(uint32, repeated, tag = "5")]
    pub param: ::prost::alloc::vec::Vec<u32>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityPeriodTask {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub activity_id: u32,
    #[prost(uint32, tag = "3")]
    pub base_task_id: u32,
    #[prost(string, tag = "4")]
    pub reward: ::prost::alloc::string::String,
    #[prost(uint32, tag = "5")]
    pub interval: u32,
    #[prost(uint32, tag = "6")]
    pub progress_limit: u32,
    #[prost(uint32, tag = "7")]
    pub progress_limit_interval: u32,
    #[prost(uint32, tag = "8")]
    pub reward_limit_day: u32,
    #[prost(string, tag = "9")]
    pub accessible_days: ::prost::alloc::string::String,
    #[prost(uint32, tag = "10")]
    pub unlock_day: u32,
    #[prost(uint32, tag = "11")]
    pub deprecated: u32,
    #[prost(uint32, tag = "12")]
    pub node_mark: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityRandomTaskPool {
    #[prost(uint32, tag = "1")]
    pub pool_id: u32,
    #[prost(uint32, tag = "2")]
    pub task_id: u32,
    #[prost(uint32, tag = "3")]
    pub activity_id: u32,
    #[prost(uint32, tag = "4")]
    pub base_task_id: u32,
    #[prost(uint32, tag = "5")]
    pub reward_id: u32,
    #[prost(uint32, tag = "6")]
    pub reward_count: u32,
    #[prost(uint32, tag = "7")]
    pub weight: u32,
    #[prost(string, tag = "8")]
    pub hidden_reward: ::prost::alloc::string::String,
    #[prost(uint32, tag = "9")]
    pub limit_id: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityRandomTaskInfo {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(uint32, repeated, tag = "2")]
    pub pool_id: ::prost::alloc::vec::Vec<u32>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityRichmanRewardSeq {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub count: u32,
    #[prost(string, tag = "3")]
    pub reward: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityActivityBuff {
    #[prost(uint32, tag = "1")]
    pub buff_id: u32,
    #[prost(uint32, tag = "2")]
    pub activity_id: u32,
    #[prost(uint32, tag = "3")]
    pub buff_level: u32,
    #[prost(uint32, tag = "4")]
    pub buff_type: u32,
    #[prost(uint32, tag = "5")]
    pub upgrade_resource_id: u32,
    #[prost(uint32, tag = "6")]
    pub upgrade_resource_count: u32,
    #[prost(uint32, tag = "7")]
    pub effect: u32,
    #[prost(uint32, repeated, tag = "8")]
    pub unlock_params: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "9")]
    pub effect_desc: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityBuffCondition {}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityGamePointInfo {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(uint32, tag = "2")]
    pub filter_id: u32,
    #[prost(uint32, tag = "3")]
    pub reward_mail_template: u32,
    #[prost(int32, tag = "4")]
    pub max_point_limit_day: i32,
    #[prost(uint32, tag = "5")]
    pub should_rank: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityGamePointRank {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(uint32, tag = "2")]
    pub rank_rate_lower: u32,
    #[prost(uint32, tag = "3")]
    pub rank_rate_upper: u32,
    #[prost(string, tag = "4")]
    pub reward: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityGamePointFilter {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub has_robot: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub category: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub room: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub mode: ::prost::alloc::string::String,
    #[prost(uint32, tag = "6")]
    pub point_coe: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityActivityRoom {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(uint32, tag = "2")]
    pub sort: u32,
    #[prost(string, tag = "3")]
    pub str_name: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub str_rule: ::prost::alloc::string::String,
    #[prost(uint32, tag = "5")]
    pub dora3_mode: u32,
    #[prost(uint32, tag = "6")]
    pub begin_open_mode: u32,
    #[prost(uint32, tag = "7")]
    pub muyu_mode: u32,
    #[prost(uint32, tag = "8")]
    pub xuezhan_mode: u32,
    #[prost(uint32, tag = "9")]
    pub huanzhang_mode: u32,
    #[prost(uint32, tag = "10")]
    pub chuanma_mode: u32,
    #[prost(uint32, tag = "11")]
    pub jiuchao_mode: u32,
    #[prost(uint32, tag = "12")]
    pub reveal_discard: u32,
    #[prost(uint32, tag = "13")]
    pub field_spell_mode: u32,
    #[prost(uint32, tag = "14")]
    pub zhanxing_mode: u32,
    #[prost(uint32, tag = "15")]
    pub tianming_mode: u32,
    #[prost(uint32, tag = "16")]
    pub yongchang_mode: u32,
    #[prost(uint32, tag = "17")]
    pub hunzhiyiji_mode: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivitySnsActivity {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub disable: u32,
    #[prost(uint32, tag = "3")]
    pub pm: u32,
    #[prost(uint32, tag = "4")]
    pub period: u32,
    #[prost(uint32, tag = "5")]
    pub activity_id: u32,
    #[prost(uint32, tag = "6")]
    pub content_str_id: u32,
    #[prost(uint32, tag = "7")]
    pub parent_id: u32,
    #[prost(uint32, tag = "8")]
    pub char_id: u32,
    #[prost(uint32, tag = "9")]
    pub char_str_id: u32,
    #[prost(uint32, tag = "10")]
    pub reply_char_id: u32,
    #[prost(uint32, tag = "11")]
    pub reply_char_str_id: u32,
    #[prost(uint32, tag = "12")]
    pub choice_id: u32,
    #[prost(uint32, tag = "13")]
    pub like: u32,
    #[prost(string, tag = "14")]
    pub unlock_time: ::prost::alloc::string::String,
    #[prost(uint32, tag = "15")]
    pub unlock_item_id: u32,
    #[prost(uint32, tag = "16")]
    pub unlock_item_count: u32,
    #[prost(string, repeated, tag = "17")]
    pub content_image: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityMineActivity {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(uint32, tag = "2")]
    pub reward_group: u32,
    #[prost(string, tag = "3")]
    pub cost_item: ::prost::alloc::string::String,
    #[prost(uint32, tag = "4")]
    pub map_size_x: u32,
    #[prost(uint32, tag = "5")]
    pub map_size_y: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityMineReward {
    #[prost(uint32, tag = "1")]
    pub group_id: u32,
    #[prost(uint32, tag = "2")]
    pub reward_id: u32,
    #[prost(string, tag = "3")]
    pub reward: ::prost::alloc::string::String,
    #[prost(uint32, tag = "4")]
    pub r#type: u32,
    #[prost(uint32, tag = "5")]
    pub x: u32,
    #[prost(uint32, tag = "6")]
    pub y: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityRpgActivity {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(uint32, tag = "2")]
    pub base_hp: u32,
    #[prost(uint32, tag = "3")]
    pub base_atk: u32,
    #[prost(uint32, tag = "4")]
    pub base_dex: u32,
    #[prost(uint32, tag = "5")]
    pub base_luk: u32,
    #[prost(uint32, tag = "6")]
    pub ds_atk: u32,
    #[prost(uint32, tag = "7")]
    pub special_heal: u32,
    #[prost(uint32, repeated, tag = "8")]
    pub chain_atk: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "9")]
    pub monster_group: u32,
    #[prost(uint32, tag = "10")]
    pub sanma_debuff: u32,
    #[prost(uint32, tag = "11")]
    pub has_robot: u32,
    #[prost(string, tag = "12")]
    pub category: ::prost::alloc::string::String,
    #[prost(string, tag = "13")]
    pub mode: ::prost::alloc::string::String,
    #[prost(string, tag = "14")]
    pub room: ::prost::alloc::string::String,
    #[prost(uint32, tag = "15")]
    pub daily_limit: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityRpgMonsterGroup {
    #[prost(uint32, tag = "1")]
    pub group_id: u32,
    #[prost(uint32, tag = "2")]
    pub seq: u32,
    #[prost(uint32, tag = "3")]
    pub r#type: u32,
    #[prost(uint32, tag = "4")]
    pub hp: u32,
    #[prost(uint32, tag = "5")]
    pub atk: u32,
    #[prost(string, tag = "6")]
    pub reward: ::prost::alloc::string::String,
    #[prost(uint32, tag = "7")]
    pub season: u32,
    #[prost(string, tag = "8")]
    pub chapters: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub imaget_path: ::prost::alloc::string::String,
    #[prost(string, tag = "10")]
    pub background: ::prost::alloc::string::String,
    #[prost(uint32, tag = "11")]
    pub name_str_id: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityArenaActivity {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(string, tag = "2")]
    pub match_time: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub ticket_time_limit: ::prost::alloc::string::String,
    #[prost(uint32, tag = "4")]
    pub ticket_item_id: u32,
    #[prost(string, tag = "5")]
    pub ticket_price: ::prost::alloc::string::String,
    #[prost(uint32, tag = "6")]
    pub desktop_id: u32,
    #[prost(uint32, tag = "7")]
    pub max_win_count: u32,
    #[prost(uint32, tag = "8")]
    pub max_lose_count: u32,
    #[prost(uint32, tag = "9")]
    pub reward_group: u32,
    #[prost(uint32, tag = "10")]
    pub daily_ticket_limit: u32,
    #[prost(uint32, tag = "11")]
    pub mail_template: u32,
    #[prost(uint32, tag = "12")]
    pub arena_reward_display_group: u32,
    #[prost(uint32, tag = "13")]
    pub level_limit: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityArenaReward {
    #[prost(uint32, tag = "1")]
    pub group_id: u32,
    #[prost(uint32, tag = "2")]
    pub win_count: u32,
    #[prost(string, tag = "3")]
    pub reward: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityArenaRewardDisplay {
    #[prost(uint32, tag = "1")]
    pub group_id: u32,
    #[prost(uint32, tag = "2")]
    pub win_count_min: u32,
    #[prost(uint32, tag = "3")]
    pub win_count_max: u32,
    #[prost(uint32, tag = "4")]
    pub reward_1: u32,
    #[prost(string, tag = "5")]
    pub reward_1_remark: ::prost::alloc::string::String,
    #[prost(uint32, tag = "6")]
    pub reward_2: u32,
    #[prost(string, tag = "7")]
    pub reward_2_remark: ::prost::alloc::string::String,
    #[prost(uint32, tag = "8")]
    pub reward_3: u32,
    #[prost(string, tag = "9")]
    pub reward_3_remark: ::prost::alloc::string::String,
    #[prost(uint32, tag = "10")]
    pub reward_4: u32,
    #[prost(string, tag = "11")]
    pub reward_4_remark: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivitySegmentTask {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub activity_id: u32,
    #[prost(uint32, tag = "3")]
    pub base_task_id: u32,
    #[prost(uint32, tag = "4")]
    pub max_finish_count: u32,
    #[prost(string, tag = "5")]
    pub reward: ::prost::alloc::string::String,
    #[prost(uint32, tag = "6")]
    pub interval: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityFeedActivityInfo {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(uint32, tag = "2")]
    pub max_feed_count: u32,
    #[prost(uint32, tag = "3")]
    pub feed_reward_id: u32,
    #[prost(uint32, tag = "4")]
    pub friend_send_limit: u32,
    #[prost(uint32, tag = "5")]
    pub friend_recv_limit: u32,
    #[prost(uint32, repeated, tag = "6")]
    pub food_item_id: ::prost::alloc::vec::Vec<u32>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityFeedActivityReward {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub count: u32,
    #[prost(string, tag = "3")]
    pub reward: ::prost::alloc::string::String,
    #[prost(uint32, tag = "4")]
    pub img_stage: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityVoteActivity {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub vote_item: u32,
    #[prost(string, tag = "3")]
    pub choice_id_list: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub vote_end_time: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityRpgV2Activity {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(uint32, tag = "2")]
    pub base_atk: u32,
    #[prost(uint32, tag = "3")]
    pub monster_group: u32,
    #[prost(uint32, tag = "4")]
    pub sanma_debuff: u32,
    #[prost(uint32, tag = "5")]
    pub special_debuff: u32,
    #[prost(uint32, tag = "6")]
    pub has_robot: u32,
    #[prost(string, tag = "7")]
    pub category: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub mode: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub room: ::prost::alloc::string::String,
    #[prost(uint32, tag = "10")]
    pub daily_limit: u32,
    #[prost(uint32, tag = "11")]
    pub mail_template_id: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivitySpotActivity {
    #[prost(uint32, tag = "1")]
    pub unique_id: u32,
    #[prost(uint32, tag = "2")]
    pub activity_id: u32,
    #[prost(uint32, tag = "3")]
    pub dep: u32,
    #[prost(uint32, tag = "4")]
    pub limit_day: u32,
    #[prost(uint32, tag = "5")]
    pub spot_group: u32,
    #[prost(string, tag = "6")]
    pub unlock_spot_item: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub content_path: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub unlock_item: ::prost::alloc::string::String,
    #[prost(uint32, tag = "9")]
    pub unlock_by_ending_id: u32,
    #[prost(string, repeated, tag = "10")]
    pub unlock_ending_id: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(uint32, repeated, tag = "11")]
    pub ending_id: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "12")]
    pub ending_id_dep: ::prost::alloc::vec::Vec<u32>,
    #[prost(string, tag = "13")]
    pub reward: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityActivityItem {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(string, tag = "2")]
    pub item_list: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityUpgradeActivity {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(uint32, tag = "2")]
    pub mail_id: u32,
    #[prost(string, tag = "3")]
    pub consume_item: ::prost::alloc::string::String,
    #[prost(uint32, tag = "4")]
    pub total_reward_id: u32,
    #[prost(uint32, repeated, tag = "5")]
    pub reward_id: ::prost::alloc::vec::Vec<u32>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityUpgradeActivityReward {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub level: u32,
    #[prost(string, tag = "3")]
    pub reward: ::prost::alloc::string::String,
    #[prost(uint32, tag = "4")]
    pub unlock_day: u32,
    #[prost(uint32, tag = "5")]
    pub highlight: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityFriendGiftActivity {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(uint32, tag = "2")]
    pub friend_send_limit: u32,
    #[prost(uint32, tag = "3")]
    pub friend_send_consume: u32,
    #[prost(uint32, tag = "4")]
    pub friend_recv_limit: u32,
    #[prost(uint32, tag = "5")]
    pub extra_gift: u32,
    #[prost(uint32, repeated, tag = "6")]
    pub gift_item_id: ::prost::alloc::vec::Vec<u32>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityUpgradeActivityDisplay {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub level: u32,
    #[prost(uint32, tag = "3")]
    pub display: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityActivityDesktop {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(uint32, tag = "2")]
    pub desktop_id: u32,
    #[prost(uint32, tag = "3")]
    pub interval: u32,
    #[prost(uint32, tag = "4")]
    pub interval_type: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityGachaActivityInfo {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(uint32, tag = "2")]
    pub gacha_pool: u32,
    #[prost(uint32, tag = "3")]
    pub gacha_control: u32,
    #[prost(uint32, tag = "4")]
    pub sp_trigger_times: u32,
    #[prost(string, tag = "5")]
    pub sp_rewards: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub consume: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityGachaPool {
    #[prost(uint32, tag = "1")]
    pub pool_id: u32,
    #[prost(uint32, tag = "2")]
    pub reward_id: u32,
    #[prost(uint32, tag = "3")]
    pub count: u32,
    #[prost(uint32, tag = "4")]
    pub rare: u32,
    #[prost(string, tag = "5")]
    pub item: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityGachaControl {}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityTaskDisplay {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(uint32, tag = "2")]
    pub day: u32,
    #[prost(uint32, tag = "3")]
    pub task_serial_number: u32,
    #[prost(uint32, tag = "4")]
    pub task_type: u32,
    #[prost(uint32, tag = "5")]
    pub period_task_id: u32,
    #[prost(uint32, tag = "6")]
    pub answer: u32,
    #[prost(uint32, tag = "7")]
    pub right_str: u32,
    #[prost(uint32, tag = "8")]
    pub wrong_str: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivitySimulationActivityInfo {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(uint32, tag = "2")]
    pub stamina_item_id: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityRewardMail {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(uint32, tag = "2")]
    pub mail_template_id: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityCombiningActivityInfo {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(uint32, repeated, tag = "2")]
    pub craft_bin: ::prost::alloc::vec::Vec<u32>,
    #[prost(string, repeated, tag = "3")]
    pub craft_bin_price: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(uint32, repeated, tag = "4")]
    pub craft_bin_unlock: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "5")]
    pub point_item: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityCombiningCraftPool {
    #[prost(uint32, tag = "1")]
    pub bin_id: u32,
    #[prost(uint32, tag = "2")]
    pub craft_id: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityCombiningMap {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(uint32, tag = "2")]
    pub point_item_id: u32,
    #[prost(uint32, tag = "3")]
    pub point_item_count: u32,
    #[prost(uint32, tag = "4")]
    pub workbench_count: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityCombiningOrder {}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityCombiningCraft {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub activity_id: u32,
    #[prost(uint32, tag = "3")]
    pub group: u32,
    #[prost(uint32, tag = "5")]
    pub level: u32,
    #[prost(uint32, tag = "6")]
    pub upgrade_craft_id: u32,
    #[prost(string, tag = "8")]
    pub order_price: ::prost::alloc::string::String,
    #[prost(uint32, tag = "9")]
    pub if_bonus: u32,
    #[prost(string, tag = "10")]
    pub img_name: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityChestReplaceUp {
    #[prost(uint32, tag = "2")]
    pub chest_id: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityVillageActivityInfo {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(uint32, tag = "2")]
    pub worker_item_id: u32,
    #[prost(string, tag = "3")]
    pub round_consume: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub random_building: ::prost::alloc::string::String,
    #[prost(uint32, tag = "5")]
    pub food_item_id: u32,
    #[prost(uint32, tag = "6")]
    pub trip_consume: u32,
    #[prost(uint32, tag = "7")]
    pub trip_cold_down: u32,
    #[prost(uint32, tag = "8")]
    pub trip_round: u32,
    #[prost(string, repeated, tag = "9")]
    pub trip_reward: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(string, repeated, tag = "10")]
    pub stage_require: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityVillageBuilding {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(uint32, tag = "2")]
    pub building_id: u32,
    #[prost(uint32, tag = "3")]
    pub initial: u32,
    #[prost(uint32, tag = "4")]
    pub building_name: u32,
    #[prost(uint32, tag = "5")]
    pub level: u32,
    #[prost(uint32, tag = "6")]
    pub next_level_id: u32,
    #[prost(string, tag = "7")]
    pub produce_item: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub base_produce: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub upgrade_item: ::prost::alloc::string::String,
    #[prost(uint32, tag = "10")]
    pub max_worker_count: u32,
    #[prost(string, tag = "11")]
    pub upgrade_reward: ::prost::alloc::string::String,
    #[prost(uint32, tag = "12")]
    pub building_stage: u32,
    #[prost(uint32, tag = "13")]
    pub worker_consume: u32,
    #[prost(string, tag = "14")]
    pub func: ::prost::alloc::string::String,
    #[prost(uint32, repeated, tag = "15")]
    pub args: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "16")]
    pub r#type: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityVillageTask {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(uint32, tag = "2")]
    pub mission_id: u32,
    #[prost(uint32, tag = "3")]
    pub mission_str: u32,
    #[prost(string, tag = "4")]
    pub fruit_type: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub consume: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub reward: ::prost::alloc::string::String,
    #[prost(uint32, tag = "7")]
    pub unlock_day: u32,
    #[prost(string, tag = "8")]
    pub unlock_point: ::prost::alloc::string::String,
    #[prost(uint32, tag = "9")]
    pub if_loop: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityLiverEventInfo {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(uint32, tag = "2")]
    pub follower_amount: u32,
    #[prost(uint32, tag = "3")]
    pub daily_follower_plus: u32,
    #[prost(uint32, tag = "4")]
    pub intro_text: u32,
    #[prost(uint32, tag = "5")]
    pub text_max_amount: u32,
    #[prost(string, tag = "6")]
    pub text_create_timer: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub text_create_weight: ::prost::alloc::string::String,
    #[prost(uint32, tag = "8")]
    pub rolltext_speed: u32,
    #[prost(string, tag = "9")]
    pub gift_weight: ::prost::alloc::string::String,
    #[prost(string, tag = "10")]
    pub rolltext_gift_time: ::prost::alloc::string::String,
    #[prost(uint32, tag = "11")]
    pub key_item_id: u32,
    #[prost(string, tag = "12")]
    pub face_time_block: ::prost::alloc::string::String,
    #[prost(string, tag = "13")]
    pub face_weight: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityLiverTextInfo {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(uint32, tag = "2")]
    pub r#type: u32,
    #[prost(uint32, tag = "3")]
    pub chara_id: u32,
    #[prost(uint32, tag = "4")]
    pub mob_str_id: u32,
    #[prost(string, tag = "5")]
    pub normal_text: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub gift_text: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityFestivalActivity {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(uint32, tag = "2")]
    pub funds_id: u32,
    #[prost(uint32, tag = "3")]
    pub proposal_id: u32,
    #[prost(uint32, tag = "4")]
    pub proposal_consume: u32,
    #[prost(uint32, tag = "5")]
    pub daily_buy_limit: u32,
    #[prost(uint32, tag = "10")]
    pub arrow_amount: u32,
    #[prost(uint32, tag = "11")]
    pub max_amount: u32,
    #[prost(uint32, tag = "12")]
    pub max_proposal_pos: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityFestivalLevel {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(uint32, tag = "2")]
    pub level: u32,
    #[prost(uint32, tag = "3")]
    pub level_name: u32,
    #[prost(string, tag = "4")]
    pub level_require: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub level_res: ::prost::alloc::string::String,
    #[prost(uint32, tag = "6")]
    pub unlock_event_count: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityFestivalProposal {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(uint32, tag = "2")]
    pub proposal_id: u32,
    #[prost(uint32, tag = "3")]
    pub unlock_level: u32,
    #[prost(uint32, repeated, tag = "4")]
    pub ending_group: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "5")]
    pub client_name: u32,
    #[prost(string, tag = "6")]
    pub client_icon: ::prost::alloc::string::String,
    #[prost(uint32, tag = "7")]
    pub proposal_text: u32,
    #[prost(uint32, tag = "8")]
    pub option_text_a: u32,
    #[prost(uint32, tag = "9")]
    pub option_text_b: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityFestivalEvent {
    #[prost(uint32, tag = "1")]
    pub activity_id: u32,
    #[prost(uint32, tag = "2")]
    pub event_id: u32,
    #[prost(uint32, tag = "3")]
    pub position: u32,
    #[prost(uint32, tag = "4")]
    pub unlock_level: u32,
    #[prost(uint32, repeated, tag = "5")]
    pub ending_group: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "6")]
    pub event_title: u32,
    #[prost(uint32, tag = "7")]
    pub client_name: u32,
    #[prost(string, tag = "8")]
    pub client_icon: ::prost::alloc::string::String,
    #[prost(uint32, tag = "9")]
    pub event_text: u32,
    #[prost(uint32, tag = "10")]
    pub option_text_a: u32,
    #[prost(uint32, tag = "11")]
    pub option_text_b: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActivityFestivalEnding {
    #[prost(uint32, tag = "1")]
    pub group_id: u32,
    #[prost(uint32, tag = "2")]
    pub ending_id: u32,
    #[prost(uint32, tag = "3")]
    pub ending_type: u32,
    #[prost(uint32, tag = "4")]
    pub weight: u32,
    #[prost(string, tag = "5")]
    pub item_plus: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub item_minus: ::prost::alloc::string::String,
    #[prost(int32, tag = "7")]
    pub funds: i32,
    #[prost(uint32, tag = "8")]
    pub ending_text: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AnimationAnimation {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub name: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub r#type: ::prost::alloc::string::String,
    #[prost(uint32, tag = "4")]
    pub lifetime: u32,
    #[prost(float, tag = "5")]
    pub speed: f32,
    #[prost(uint32, repeated, tag = "6")]
    pub keypoint: ::prost::alloc::vec::Vec<u32>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AudioAudio {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub path: ::prost::alloc::string::String,
    #[prost(float, tag = "3")]
    pub time_length: f32,
    #[prost(string, tag = "4")]
    pub r#type: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AudioBgm {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub auto_hide: u32,
    #[prost(string, tag = "3")]
    pub name_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub name_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub name_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub name_en: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub name_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub path: ::prost::alloc::string::String,
    #[prost(float, tag = "9")]
    pub time_length: f32,
    #[prost(string, tag = "10")]
    pub r#type: ::prost::alloc::string::String,
    #[prost(string, tag = "11")]
    pub unlock_desc_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "12")]
    pub unlock_desc_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "13")]
    pub unlock_desc_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "14")]
    pub unlock_desc_en: ::prost::alloc::string::String,
    #[prost(string, tag = "15")]
    pub unlock_desc_kr: ::prost::alloc::string::String,
    #[prost(uint32, tag = "16")]
    pub unlock_item: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CharacterEmoji {
    #[prost(uint32, tag = "1")]
    pub charid: u32,
    #[prost(uint32, tag = "2")]
    pub sub_id: u32,
    #[prost(string, tag = "3")]
    pub unlock_desc_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub unlock_desc_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub unlock_desc_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub unlock_desc_en: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub unlock_desc_kr: ::prost::alloc::string::String,
    #[prost(uint32, tag = "8")]
    pub r#type: u32,
    #[prost(string, tag = "9")]
    pub view: ::prost::alloc::string::String,
    #[prost(uint32, tag = "10")]
    pub audio: u32,
    #[prost(string, tag = "11")]
    pub after_unlock_desc_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "12")]
    pub after_unlock_desc_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "13")]
    pub after_unlock_desc_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "14")]
    pub after_unlock_desc_en: ::prost::alloc::string::String,
    #[prost(string, tag = "15")]
    pub after_unlock_desc_kr: ::prost::alloc::string::String,
    #[prost(uint32, tag = "16")]
    pub unlock_type: u32,
    #[prost(uint32, repeated, tag = "17")]
    pub unlock_param: ::prost::alloc::vec::Vec<u32>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CharacterCutin {
    #[prost(uint32, tag = "1")]
    pub skinid: u32,
    #[prost(string, tag = "2")]
    pub cutin_name: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub effect: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub atlas: ::prost::alloc::string::String,
    #[prost(int32, tag = "5")]
    pub char_x: i32,
    #[prost(int32, tag = "6")]
    pub char_y: i32,
    #[prost(uint32, tag = "7")]
    pub char_width: u32,
    #[prost(uint32, tag = "8")]
    pub char_height: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CharacterSkin {
    #[prost(uint32, tag = "1")]
    pub skinid: u32,
    #[prost(uint32, tag = "2")]
    pub spine_layers: u32,
    #[prost(string, repeated, tag = "3")]
    pub effects: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(string, tag = "4")]
    pub audio_celebrate: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub audio_idle: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub audio_greeting: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub audio_click: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ChestChest {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub r#type: u32,
    #[prost(string, tag = "3")]
    pub name_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub name_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub name_en: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub desc_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub desc_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub desc_en: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub desc_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "10")]
    pub img: ::prost::alloc::string::String,
    #[prost(uint32, tag = "11")]
    pub gift: u32,
    #[prost(uint32, tag = "12")]
    pub currency: u32,
    #[prost(uint32, tag = "13")]
    pub price: u32,
    #[prost(uint32, tag = "14")]
    pub price10: u32,
    #[prost(uint32, tag = "15")]
    pub ticket_id: u32,
    #[prost(uint32, tag = "16")]
    pub ticket_10_id: u32,
    #[prost(uint32, tag = "22")]
    pub faith_id: u32,
    #[prost(uint32, tag = "23")]
    pub zone: u32,
    #[prost(uint32, tag = "24")]
    pub sort: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ChestPool {}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ChestPoolSeq {}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ChestItemPool {}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ChestChestShop {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub chest_id: u32,
    #[prost(string, tag = "3")]
    pub icon: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub name_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub name_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub name_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub name_en: ::prost::alloc::string::String,
    #[prost(uint32, tag = "8")]
    pub item_id: u32,
    #[prost(uint32, tag = "9")]
    pub price: u32,
    #[prost(uint32, tag = "10")]
    pub need_amount: u32,
    #[prost(uint32, tag = "11")]
    pub check_activity: u32,
    #[prost(string, tag = "12")]
    pub launch_time: ::prost::alloc::string::String,
    #[prost(uint32, tag = "13")]
    pub remove_limit_mark: u32,
    #[prost(uint32, tag = "14")]
    pub sort: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ChestPreview {
    #[prost(uint32, tag = "1")]
    pub chest_id: u32,
    #[prost(uint32, tag = "2")]
    pub item_id: u32,
    #[prost(string, tag = "3")]
    pub r#type: ::prost::alloc::string::String,
    #[prost(uint32, tag = "4")]
    pub check_activity: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ChestUp {}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ChestItemPrice {}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ChestReplaceUp {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub replace_pool_id: u32,
    #[prost(uint32, tag = "3")]
    pub count: u32,
    #[prost(uint32, tag = "5")]
    pub activity_id: u32,
    #[prost(uint32, tag = "6")]
    pub count_id: u32,
    #[prost(uint32, tag = "7")]
    pub r#type: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ChestReplacePool {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub resource_id: u32,
    #[prost(uint32, tag = "4")]
    pub is_replace: u32,
    #[prost(uint32, tag = "5")]
    pub add_count: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ComposeCharacompose {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub item_id: u32,
    #[prost(uint32, tag = "3")]
    pub item_num: u32,
    #[prost(uint32, tag = "4")]
    pub chara_id: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ContestContest {
    #[prost(string, tag = "1")]
    pub id: ::prost::alloc::string::String,
    #[prost(int32, tag = "2")]
    pub int_value: i32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct DesktopMatchmode {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub is_open: u32,
    #[prost(uint32, tag = "3")]
    pub match_group: u32,
    #[prost(uint32, tag = "4")]
    pub r#type: u32,
    #[prost(uint32, tag = "5")]
    pub activity_id: u32,
    #[prost(uint32, tag = "6")]
    pub open_guyi: u32,
    #[prost(uint32, tag = "7")]
    pub dora3_mode: u32,
    #[prost(uint32, tag = "8")]
    pub begin_open_mode: u32,
    #[prost(uint32, tag = "9")]
    pub muyu_mode: u32,
    #[prost(uint32, tag = "10")]
    pub xuezhan_mode: u32,
    #[prost(uint32, tag = "11")]
    pub chuanma_mode: u32,
    #[prost(uint32, tag = "12")]
    pub huanzhang_mode: u32,
    #[prost(uint32, tag = "13")]
    pub jiuchao_mode: u32,
    #[prost(uint32, tag = "14")]
    pub reveal_discard: u32,
    #[prost(uint32, tag = "15")]
    pub field_spell_mode: u32,
    #[prost(uint32, tag = "16")]
    pub zhanxing_mode: u32,
    #[prost(uint32, tag = "17")]
    pub tianming_mode: u32,
    #[prost(uint32, tag = "18")]
    pub yongchang_mode: u32,
    #[prost(uint32, tag = "19")]
    pub hunzhiyiji_mode: u32,
    #[prost(uint32, tag = "20")]
    pub room: u32,
    #[prost(uint32, tag = "21")]
    pub mode: u32,
    #[prost(uint32, tag = "22")]
    pub can_sumup: u32,
    #[prost(string, tag = "23")]
    pub room_name_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "24")]
    pub room_name_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "25")]
    pub room_name_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "26")]
    pub room_name_en: ::prost::alloc::string::String,
    #[prost(string, tag = "27")]
    pub room_name_kr: ::prost::alloc::string::String,
    #[prost(int32, tag = "28")]
    pub glimit_floor: i32,
    #[prost(int32, tag = "29")]
    pub glimit_ceil: i32,
    #[prost(int32, tag = "30")]
    pub gcarry: i32,
    #[prost(int32, tag = "31")]
    pub exchange_rate: i32,
    #[prost(int32, tag = "32")]
    pub levelpoint1: i32,
    #[prost(int32, tag = "33")]
    pub levelpoint2: i32,
    #[prost(int32, tag = "34")]
    pub levelpoint3: i32,
    #[prost(int32, tag = "35")]
    pub levelpoint4: i32,
    #[prost(int32, tag = "36")]
    pub fish_point: i32,
    #[prost(int32, tag = "37")]
    pub init_point: i32,
    #[prost(int32, tag = "38")]
    pub back_point: i32,
    #[prost(int32, tag = "39")]
    pub count_point: i32,
    #[prost(int32, repeated, tag = "40")]
    pub buchang: ::prost::alloc::vec::Vec<i32>,
    #[prost(uint32, tag = "41")]
    pub level_limit: u32,
    #[prost(uint32, tag = "42")]
    pub level_limit_ceil: u32,
    #[prost(int32, tag = "43")]
    pub tip: i32,
    #[prost(int32, tag = "44")]
    pub friendship: i32,
    #[prost(uint32, tag = "45")]
    pub chest_id: u32,
    #[prost(uint32, repeated, tag = "46")]
    pub chest_exp_add: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "47")]
    pub level_match: u32,
    #[prost(uint32, tag = "48")]
    pub level_match_range: u32,
    #[prost(uint32, tag = "49")]
    pub level_match_max: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct DesktopChest {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub exp_step: u32,
    #[prost(string, tag = "3")]
    pub name_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub name_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub name_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub name_en: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub name_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub icon: ::prost::alloc::string::String,
    #[prost(uint32, tag = "9")]
    pub reward_pool: u32,
    #[prost(uint32, tag = "10")]
    pub select_count: u32,
    #[prost(uint32, tag = "11")]
    pub repeated: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct DesktopSettings {
    #[prost(string, tag = "1")]
    pub key: ::prost::alloc::string::String,
    #[prost(int32, tag = "2")]
    pub int_value: i32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct DesktopFieldSpell {
    #[prost(uint32, tag = "1")]
    pub field: u32,
    #[prost(uint32, tag = "2")]
    pub id: u32,
    #[prost(string, tag = "4")]
    pub cardname: ::prost::alloc::string::String,
    #[prost(uint32, tag = "5")]
    pub sord_card_id: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct EventsSoscoin {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub level_limit: u32,
    #[prost(uint32, tag = "3")]
    pub level3_limit: u32,
    #[prost(uint32, tag = "4")]
    pub gold_limit: u32,
    #[prost(uint32, tag = "5")]
    pub gold_num: u32,
    #[prost(string, tag = "6")]
    pub desc_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub desc_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub desc_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub desc_en: ::prost::alloc::string::String,
    #[prost(string, tag = "10")]
    pub desc_kr: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct EventsDailyevent {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub reward_type: u32,
    #[prost(uint32, tag = "3")]
    pub reward_num: u32,
    #[prost(string, tag = "4")]
    pub desc_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub desc_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub desc_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub desc_en: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub desc_kr: ::prost::alloc::string::String,
    #[prost(uint32, tag = "9")]
    pub active_type: u32,
    #[prost(uint32, tag = "11")]
    pub r#type: u32,
    #[prost(uint32, tag = "12")]
    pub target: u32,
    #[prost(string, repeated, tag = "13")]
    pub param: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(string, tag = "14")]
    pub level_limit: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct EventsBaseTask {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub desc_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub desc_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub desc_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub desc_en: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub desc_kr: ::prost::alloc::string::String,
    #[prost(uint32, tag = "7")]
    pub r#type: u32,
    #[prost(uint32, tag = "8")]
    pub target: u32,
    #[prost(string, repeated, tag = "9")]
    pub param: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ExchangeExchange {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub source_currency: u32,
    #[prost(int32, tag = "3")]
    pub source_value: i32,
    #[prost(uint32, tag = "4")]
    pub target_currency: u32,
    #[prost(int32, tag = "5")]
    pub target_value: i32,
    #[prost(string, tag = "6")]
    pub icon: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub name_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub name_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub name_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "10")]
    pub name_en: ::prost::alloc::string::String,
    #[prost(string, tag = "11")]
    pub name_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "12")]
    pub desc_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "13")]
    pub desc_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "14")]
    pub desc_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "15")]
    pub desc_en: ::prost::alloc::string::String,
    #[prost(string, tag = "16")]
    pub desc_kr: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ExchangeSearchexchange {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub source_currency: u32,
    #[prost(int32, tag = "3")]
    pub source_value: i32,
    #[prost(uint32, tag = "4")]
    pub target_currency: u32,
    #[prost(int32, tag = "5")]
    pub target_value: i32,
    #[prost(string, tag = "6")]
    pub icon: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub name_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub name_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub name_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "10")]
    pub name_en: ::prost::alloc::string::String,
    #[prost(string, tag = "11")]
    pub name_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "12")]
    pub desc_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "13")]
    pub desc_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "14")]
    pub desc_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "15")]
    pub desc_en: ::prost::alloc::string::String,
    #[prost(string, tag = "16")]
    pub desc_kor: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ExchangeFushiquanexchange {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub source_currency: u32,
    #[prost(int32, tag = "3")]
    pub source_value: i32,
    #[prost(uint32, tag = "4")]
    pub target_currency: u32,
    #[prost(int32, tag = "5")]
    pub target_value: i32,
    #[prost(string, tag = "6")]
    pub icon: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub name_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub name_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub name_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "10")]
    pub name_en: ::prost::alloc::string::String,
    #[prost(string, tag = "11")]
    pub name_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "12")]
    pub desc_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "13")]
    pub desc_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "14")]
    pub desc_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "15")]
    pub desc_en: ::prost::alloc::string::String,
    #[prost(string, tag = "16")]
    pub desc_kr: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct FanFan {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub name_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub name_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub name_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub name_en: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub name_kr: ::prost::alloc::string::String,
    #[prost(uint32, tag = "7")]
    pub xuanshang: u32,
    #[prost(uint32, tag = "8")]
    pub yiman: u32,
    #[prost(uint32, tag = "9")]
    pub fan_menqing: u32,
    #[prost(uint32, tag = "10")]
    pub fan_fulu: u32,
    #[prost(uint32, tag = "11")]
    pub show_index: u32,
    #[prost(string, tag = "12")]
    pub sound: ::prost::alloc::string::String,
    #[prost(uint32, tag = "13")]
    pub is_guyi: u32,
    #[prost(uint32, tag = "14")]
    pub rarity: u32,
    #[prost(uint32, tag = "15")]
    pub show_range_1: u32,
    #[prost(string, tag = "16")]
    pub show_range_2: ::prost::alloc::string::String,
    #[prost(uint32, tag = "17")]
    pub merge_id: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct FandescFandesc {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub tag: u32,
    #[prost(string, tag = "3")]
    pub name_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub name_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub name_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub name_en: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub name_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub desc_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub desc_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "10")]
    pub desc_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "11")]
    pub desc_en: ::prost::alloc::string::String,
    #[prost(string, tag = "12")]
    pub desc_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "13")]
    pub desc2_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "14")]
    pub desc2_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "15")]
    pub desc2_en: ::prost::alloc::string::String,
    #[prost(string, tag = "16")]
    pub desc2_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "17")]
    pub desc2_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "18")]
    pub case: ::prost::alloc::string::String,
    #[prost(uint32, tag = "19")]
    pub show: u32,
    #[prost(uint32, tag = "20")]
    pub mode: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GameLiveSelectFilters {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub category: u32,
    #[prost(uint32, tag = "3")]
    pub mode_id: u32,
    #[prost(uint32, tag = "4")]
    pub mode: u32,
    #[prost(uint32, tag = "5")]
    pub tournament_id: u32,
    #[prost(uint32, tag = "6")]
    pub open: u32,
    #[prost(uint32, tag = "7")]
    pub initial: u32,
    #[prost(string, tag = "8")]
    pub name1_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub name1_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "10")]
    pub name1_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "11")]
    pub name1_en: ::prost::alloc::string::String,
    #[prost(string, tag = "12")]
    pub name1_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "13")]
    pub name2_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "14")]
    pub name2_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "15")]
    pub name2_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "16")]
    pub name2_en: ::prost::alloc::string::String,
    #[prost(string, tag = "17")]
    pub name2_kr: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct InfoError {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub chs: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub jp: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub en: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub kr: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct InfoForbidden {
    #[prost(string, tag = "1")]
    pub word: ::prost::alloc::string::String,
    #[prost(uint32, tag = "2")]
    pub type_chs: u32,
    #[prost(uint32, tag = "3")]
    pub near_chs: u32,
    #[prost(uint32, tag = "4")]
    pub chs: u32,
    #[prost(uint32, tag = "5")]
    pub type_us: u32,
    #[prost(uint32, tag = "6")]
    pub near_us: u32,
    #[prost(uint32, tag = "7")]
    pub us: u32,
    #[prost(uint32, tag = "8")]
    pub type_jp: u32,
    #[prost(uint32, tag = "9")]
    pub near_jp: u32,
    #[prost(uint32, tag = "10")]
    pub jp: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct InfoNear {
    #[prost(string, tag = "1")]
    pub word1: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub word2: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub word3: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub word4: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub word5: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct InfoTranslate {
    #[prost(string, tag = "1")]
    pub original: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub chs: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub jp: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub en: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub kr: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ItemDefinitionCurrency {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub name_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub name_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub name_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub name_en: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub name_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub desc_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub desc_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub desc_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "10")]
    pub desc_en: ::prost::alloc::string::String,
    #[prost(string, tag = "11")]
    pub desc_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "12")]
    pub icon: ::prost::alloc::string::String,
    #[prost(string, tag = "13")]
    pub icon_jpg: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ItemDefinitionItem {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub sort: u32,
    #[prost(string, tag = "3")]
    pub name_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub name_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub name_chs_t2: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub name_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub name_en: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub name_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub desc_func_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "10")]
    pub desc_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "11")]
    pub desc_func_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "12")]
    pub desc_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "13")]
    pub desc_chs_t2: ::prost::alloc::string::String,
    #[prost(string, tag = "14")]
    pub desc_func_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "15")]
    pub desc_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "16")]
    pub desc_func_en: ::prost::alloc::string::String,
    #[prost(string, tag = "17")]
    pub desc_en: ::prost::alloc::string::String,
    #[prost(string, tag = "18")]
    pub desc_func_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "19")]
    pub desc_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "20")]
    pub icon: ::prost::alloc::string::String,
    #[prost(string, tag = "21")]
    pub icon_transparent: ::prost::alloc::string::String,
    #[prost(uint32, tag = "22")]
    pub category: u32,
    #[prost(uint32, tag = "23")]
    pub r#type: u32,
    #[prost(uint32, tag = "24")]
    pub is_unique: u32,
    #[prost(uint32, tag = "25")]
    pub max_stack: u32,
    #[prost(string, tag = "26")]
    pub access: ::prost::alloc::string::String,
    #[prost(uint32, tag = "27")]
    pub accessinfo: u32,
    #[prost(string, tag = "28")]
    pub func: ::prost::alloc::string::String,
    #[prost(uint32, repeated, tag = "29")]
    pub iargs: ::prost::alloc::vec::Vec<u32>,
    #[prost(string, repeated, tag = "30")]
    pub sargs: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(uint32, tag = "31")]
    pub can_sell: u32,
    #[prost(uint32, tag = "32")]
    pub sell_reward_id: u32,
    #[prost(uint32, tag = "33")]
    pub sell_reward_count: u32,
    #[prost(string, tag = "35")]
    pub item_expire: ::prost::alloc::string::String,
    #[prost(string, tag = "36")]
    pub expire_desc_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "37")]
    pub expire_desc_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "38")]
    pub expire_desc_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "39")]
    pub expire_desc_en: ::prost::alloc::string::String,
    #[prost(string, tag = "40")]
    pub expire_desc_kr: ::prost::alloc::string::String,
    #[prost(uint32, tag = "41")]
    pub region_limit: u32,
    #[prost(uint32, tag = "42")]
    pub cross_view: u32,
    #[prost(uint32, tag = "43")]
    pub database_cache: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ItemDefinitionTitle {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub name_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub name_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub name_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub name_en: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub name_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub desc_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub desc_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub desc_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "10")]
    pub desc_en: ::prost::alloc::string::String,
    #[prost(string, tag = "11")]
    pub desc_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "12")]
    pub icon: ::prost::alloc::string::String,
    #[prost(string, tag = "13")]
    pub icon_item: ::prost::alloc::string::String,
    #[prost(uint32, tag = "14")]
    pub priority: u32,
    #[prost(uint32, tag = "15")]
    pub unlock_type: u32,
    #[prost(uint32, repeated, tag = "16")]
    pub unlock_param: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "17")]
    pub cross_view: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ItemDefinitionCharacter {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub sort: u32,
    #[prost(string, tag = "3")]
    pub launch_time: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub name_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub name_chs2: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub name_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub name_chs_t2: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub name_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub name_jp2: ::prost::alloc::string::String,
    #[prost(string, tag = "10")]
    pub name_en: ::prost::alloc::string::String,
    #[prost(string, tag = "11")]
    pub name_kr: ::prost::alloc::string::String,
    #[prost(uint32, tag = "12")]
    pub open: u32,
    #[prost(uint32, tag = "13")]
    pub init_skin: u32,
    #[prost(uint32, tag = "14")]
    pub full_fetter_skin: u32,
    #[prost(uint32, tag = "15")]
    pub hand: u32,
    #[prost(uint32, tag = "16")]
    pub favorite: u32,
    #[prost(string, tag = "17")]
    pub star_5_material: ::prost::alloc::string::String,
    #[prost(uint32, tag = "18")]
    pub star_5_cost: u32,
    #[prost(uint32, tag = "19")]
    pub can_marry: u32,
    #[prost(uint32, tag = "20")]
    pub exchange_item_id: u32,
    #[prost(int32, tag = "21")]
    pub exchange_item_num: i32,
    #[prost(string, tag = "22")]
    pub emo: ::prost::alloc::string::String,
    #[prost(uint32, tag = "23")]
    pub sound: u32,
    #[prost(float, tag = "24")]
    pub sound_volume: f32,
    #[prost(uint32, tag = "25")]
    pub sex: u32,
    #[prost(string, tag = "26")]
    pub desc_stature_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "27")]
    pub desc_stature_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "28")]
    pub desc_stature_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "29")]
    pub desc_stature_en: ::prost::alloc::string::String,
    #[prost(string, tag = "30")]
    pub desc_stature_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "31")]
    pub desc_birth_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "32")]
    pub desc_birth_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "33")]
    pub desc_birth_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "34")]
    pub desc_birth_en: ::prost::alloc::string::String,
    #[prost(string, tag = "35")]
    pub desc_birth_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "36")]
    pub desc_age_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "37")]
    pub desc_age_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "38")]
    pub desc_age_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "39")]
    pub desc_age_en: ::prost::alloc::string::String,
    #[prost(string, tag = "40")]
    pub desc_age_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "41")]
    pub desc_bloodtype_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "42")]
    pub desc_bloodtype_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "43")]
    pub desc_bloodtype_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "44")]
    pub desc_bloodtype_en: ::prost::alloc::string::String,
    #[prost(string, tag = "45")]
    pub desc_bloodtype_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "46")]
    pub desc_cv_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "47")]
    pub desc_cv_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "48")]
    pub desc_cv_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "49")]
    pub desc_cv_en: ::prost::alloc::string::String,
    #[prost(string, tag = "50")]
    pub desc_cv_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "51")]
    pub desc_hobby_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "52")]
    pub desc_hobby_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "53")]
    pub desc_hobby_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "54")]
    pub desc_hobby_en: ::prost::alloc::string::String,
    #[prost(string, tag = "55")]
    pub desc_hobby_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "56")]
    pub desc_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "57")]
    pub desc_item_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "58")]
    pub desc_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "59")]
    pub desc_item_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "60")]
    pub desc_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "61")]
    pub desc_item_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "62")]
    pub desc_en: ::prost::alloc::string::String,
    #[prost(string, tag = "63")]
    pub desc_item_en: ::prost::alloc::string::String,
    #[prost(string, tag = "64")]
    pub desc_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "65")]
    pub desc_item_kr: ::prost::alloc::string::String,
    #[prost(uint32, tag = "66")]
    pub collaboration: u32,
    #[prost(uint32, tag = "67")]
    pub region_limit: u32,
    #[prost(uint32, repeated, tag = "68")]
    pub skin_lib: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "69")]
    pub ur: u32,
    #[prost(uint32, tag = "70")]
    pub ur_ron: u32,
    #[prost(uint32, tag = "71")]
    pub ur_liqi: u32,
    #[prost(string, tag = "72")]
    pub ur_cutin: ::prost::alloc::string::String,
    #[prost(uint32, tag = "73")]
    pub limited: u32,
    #[prost(uint32, tag = "74")]
    pub treasure_sp: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ItemDefinitionView {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub res_name: ::prost::alloc::string::String,
    #[prost(uint32, tag = "3")]
    pub audio_id: u32,
    #[prost(uint32, tag = "4")]
    pub character_id: u32,
    #[prost(string, repeated, tag = "5")]
    pub sargs: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ItemDefinitionSkin {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub r#type: u32,
    #[prost(string, tag = "3")]
    pub name_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub name_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub name_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub name_en: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub name_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub desc_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub desc_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "10")]
    pub desc_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "11")]
    pub desc_en: ::prost::alloc::string::String,
    #[prost(string, tag = "12")]
    pub desc_kr: ::prost::alloc::string::String,
    #[prost(uint32, tag = "13")]
    pub character_id: u32,
    #[prost(string, tag = "14")]
    pub lock_tips_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "15")]
    pub lock_tips_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "16")]
    pub lock_tips_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "17")]
    pub lock_tips_en: ::prost::alloc::string::String,
    #[prost(string, tag = "18")]
    pub lock_tips_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "19")]
    pub path: ::prost::alloc::string::String,
    #[prost(uint32, tag = "20")]
    pub exchange_item_id: u32,
    #[prost(int32, tag = "21")]
    pub exchange_item_num: i32,
    #[prost(uint32, tag = "22")]
    pub direction: u32,
    #[prost(uint32, tag = "23")]
    pub no_reverse: u32,
    #[prost(uint32, tag = "24")]
    pub lock_reverse: u32,
    #[prost(int32, tag = "25")]
    pub offset_x: i32,
    #[prost(int32, tag = "26")]
    pub offset_y: i32,
    #[prost(string, tag = "27")]
    pub spot_scale: ::prost::alloc::string::String,
    #[prost(string, tag = "28")]
    pub effective_time: ::prost::alloc::string::String,
    #[prost(string, tag = "29")]
    pub lobby_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "30")]
    pub liaoshe_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "31")]
    pub shop_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "32")]
    pub win_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "33")]
    pub gameend_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "34")]
    pub starup_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "35")]
    pub treasure_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "36")]
    pub ck_full_0_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "37")]
    pub ck_full_1_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "38")]
    pub ck_full_2_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "39")]
    pub ck_full_3_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "40")]
    pub ck_full_single_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "41")]
    pub ck_half_0_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "42")]
    pub ck_half_1_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "43")]
    pub ck_half_2_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "44")]
    pub ck_half_3_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "45")]
    pub ck_half_single_offset: ::prost::alloc::string::String,
    #[prost(int32, tag = "46")]
    pub smallhead_x: i32,
    #[prost(int32, tag = "47")]
    pub smallhead_y: i32,
    #[prost(int32, tag = "48")]
    pub smallhead_width: i32,
    #[prost(int32, tag = "49")]
    pub full_x: i32,
    #[prost(int32, tag = "50")]
    pub full_y: i32,
    #[prost(int32, tag = "51")]
    pub full_width: i32,
    #[prost(int32, tag = "52")]
    pub full_height: i32,
    #[prost(int32, tag = "53")]
    pub half_x: i32,
    #[prost(int32, tag = "54")]
    pub half_y: i32,
    #[prost(int32, tag = "55")]
    pub half_width: i32,
    #[prost(int32, tag = "56")]
    pub half_height: i32,
    #[prost(int32, tag = "57")]
    pub spine_type: i32,
    #[prost(int32, tag = "58")]
    pub spine_width: i32,
    #[prost(int32, tag = "59")]
    pub spine_height: i32,
    #[prost(int32, tag = "60")]
    pub pivot_x: i32,
    #[prost(int32, tag = "61")]
    pub pivot_y: i32,
    #[prost(int32, tag = "62")]
    pub idle: i32,
    #[prost(int32, tag = "63")]
    pub greeting: i32,
    #[prost(int32, tag = "64")]
    pub celebrate: i32,
    #[prost(int32, tag = "65")]
    pub click: i32,
    #[prost(int32, tag = "66")]
    pub greeting_init: i32,
    #[prost(int32, tag = "67")]
    pub click2: i32,
    #[prost(int32, tag = "68")]
    pub celebrate_idle: i32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ItemDefinitionItemRecovery {}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ItemDefinitionItemManualPool {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub res_id: u32,
    #[prost(uint32, tag = "3")]
    pub res_count: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ItemDefinitionSourceLimit {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub item_id: u32,
    #[prost(uint32, tag = "3")]
    pub item_limit: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ItemDefinitionItemPackage {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub res_id: u32,
    #[prost(uint32, tag = "3")]
    pub res_count: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ItemDefinitionFakeRandomPool {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, repeated, tag = "2")]
    pub stage_count: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "3")]
    pub stage_weight: ::prost::alloc::vec::Vec<u32>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ItemDefinitionLoadingImage {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub img_path: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub thumb_path: ::prost::alloc::string::String,
    #[prost(uint32, tag = "4")]
    pub sort: u32,
    #[prost(uint32, repeated, tag = "5")]
    pub unlock_items: ::prost::alloc::vec::Vec<u32>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ItemDefinitionFunctionItem {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub r#type: u32,
    #[prost(uint32, repeated, tag = "3")]
    pub args: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "4")]
    pub name: u32,
    #[prost(uint32, tag = "5")]
    pub desc_func: u32,
    #[prost(uint32, tag = "6")]
    pub desc: u32,
    #[prost(string, tag = "7")]
    pub icon: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub icon_transparent: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct LeaderboardLeaderboard {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub start_time: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub end_time: ::prost::alloc::string::String,
    #[prost(uint32, tag = "4")]
    pub refresh_cd: u32,
    #[prost(uint32, tag = "5")]
    pub max_count: u32,
    #[prost(string, tag = "6")]
    pub show_list: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct LevelDefinitionLevelDefinition {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(int32, tag = "2")]
    pub r#type: i32,
    #[prost(uint32, tag = "3")]
    pub primary_level: u32,
    #[prost(uint32, tag = "4")]
    pub secondary_level: u32,
    #[prost(uint32, tag = "5")]
    pub init_point: u32,
    #[prost(uint32, tag = "6")]
    pub end_point: u32,
    #[prost(string, tag = "7")]
    pub primary_icon: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub name_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub name_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "10")]
    pub name_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "11")]
    pub name_en: ::prost::alloc::string::String,
    #[prost(string, tag = "12")]
    pub name_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "13")]
    pub full_name_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "14")]
    pub full_name_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "15")]
    pub full_name_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "16")]
    pub full_name_en: ::prost::alloc::string::String,
    #[prost(string, tag = "17")]
    pub full_name_kr: ::prost::alloc::string::String,
    #[prost(uint32, tag = "18")]
    pub can_degrade: u32,
    #[prost(uint32, tag = "19")]
    pub can_upgrade: u32,
    #[prost(uint32, tag = "20")]
    pub can_getpoint: u32,
    #[prost(int32, tag = "21")]
    pub rankpt1: i32,
    #[prost(int32, tag = "22")]
    pub rankpt2: i32,
    #[prost(uint32, tag = "23")]
    pub top_rank_id: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct LevelDefinitionCharacter {
    #[prost(uint32, tag = "1")]
    pub level: u32,
    #[prost(uint32, tag = "2")]
    pub character_id: u32,
    #[prost(uint32, tag = "3")]
    pub exp: u32,
    #[prost(string, tag = "4")]
    pub reward: ::prost::alloc::string::String,
    #[prost(uint32, tag = "5")]
    pub unlock_says: u32,
    #[prost(string, tag = "6")]
    pub unlock_desc_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub unlock_desc_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub unlock_desc_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub unlock_desc_en: ::prost::alloc::string::String,
    #[prost(string, tag = "10")]
    pub unlock_desc_kr: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct LevelDefinitionTrail {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub init_level: u32,
    #[prost(uint32, tag = "3")]
    pub end_level: u32,
    #[prost(uint32, tag = "4")]
    pub trail_icon: u32,
    #[prost(int32, tag = "5")]
    pub trail_fire: i32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct LevelDefinitionTopRank {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(int32, repeated, tag = "2")]
    pub rank_pt: ::prost::alloc::vec::Vec<i32>,
    #[prost(int32, repeated, tag = "3")]
    pub top_rank_pt: ::prost::alloc::vec::Vec<i32>,
    #[prost(uint32, tag = "4")]
    pub mode: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MallGoods {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub name_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub name_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub name_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub name_en: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub name_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub desc: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub desc_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub desc_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "10")]
    pub desc_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "11")]
    pub desc_en: ::prost::alloc::string::String,
    #[prost(string, tag = "12")]
    pub desc_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "13")]
    pub icon: ::prost::alloc::string::String,
    #[prost(uint32, tag = "14")]
    pub resource_id: u32,
    #[prost(uint32, tag = "15")]
    pub resource_count: u32,
    #[prost(uint32, tag = "16")]
    pub vip_exp: u32,
    #[prost(uint32, tag = "17")]
    pub cny: u32,
    #[prost(string, tag = "18")]
    pub price: ::prost::alloc::string::String,
    #[prost(string, tag = "19")]
    pub first_desc_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "20")]
    pub first_desc_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "21")]
    pub first_desc_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "22")]
    pub first_desc_en: ::prost::alloc::string::String,
    #[prost(string, tag = "23")]
    pub first_desc_kr: ::prost::alloc::string::String,
    #[prost(uint32, tag = "24")]
    pub first_extend_add: u32,
    #[prost(string, tag = "25")]
    pub normal_desc_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "26")]
    pub normal_desc_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "27")]
    pub normal_desc_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "28")]
    pub normal_desc_en: ::prost::alloc::string::String,
    #[prost(string, tag = "29")]
    pub normal_desc_kr: ::prost::alloc::string::String,
    #[prost(uint32, tag = "30")]
    pub normal_extend_add: u32,
    #[prost(uint32, tag = "31")]
    pub r#type: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MallProduct {
    #[prost(uint32, tag = "1")]
    pub payment_platform: u32,
    #[prost(uint32, tag = "2")]
    pub goods_id: u32,
    #[prost(uint32, tag = "3")]
    pub product_type: u32,
    #[prost(string, tag = "4")]
    pub product_id: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub currency_code: ::prost::alloc::string::String,
    #[prost(uint32, tag = "6")]
    pub currency_price: u32,
    #[prost(string, tag = "7")]
    pub actual_code: ::prost::alloc::string::String,
    #[prost(uint32, tag = "8")]
    pub actual_price: u32,
    #[prost(string, tag = "9")]
    pub brief_desc: ::prost::alloc::string::String,
    #[prost(string, tag = "10")]
    pub detail_desc: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MallGoodsShelves {
    #[prost(string, tag = "1")]
    pub id: ::prost::alloc::string::String,
    #[prost(uint32, tag = "2")]
    pub goods_id: u32,
    #[prost(string, tag = "3")]
    pub currency_code: ::prost::alloc::string::String,
    #[prost(uint32, tag = "4")]
    pub currency_price: u32,
    #[prost(string, tag = "5")]
    pub price: ::prost::alloc::string::String,
    #[prost(uint32, tag = "6")]
    pub is_monthcard: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MallZoneParams {
    #[prost(string, tag = "1")]
    pub zone_id: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub key: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub string_value: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MallMonthTicket {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub name_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub name_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub name_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub name_en: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub name_kr: ::prost::alloc::string::String,
    #[prost(uint32, tag = "7")]
    pub resource_id: u32,
    #[prost(uint32, tag = "8")]
    pub resource_count: u32,
    #[prost(uint32, tag = "9")]
    pub vip_exp: u32,
    #[prost(uint32, tag = "10")]
    pub effective_time: u32,
    #[prost(string, tag = "11")]
    pub icon: ::prost::alloc::string::String,
    #[prost(string, tag = "12")]
    pub desc_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "13")]
    pub desc_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "14")]
    pub desc_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "15")]
    pub desc_en: ::prost::alloc::string::String,
    #[prost(string, tag = "16")]
    pub desc_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "17")]
    pub desc_detail_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "18")]
    pub desc_detail_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "19")]
    pub desc_detail_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "20")]
    pub desc_detail_en: ::prost::alloc::string::String,
    #[prost(string, tag = "21")]
    pub desc_detail_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "22")]
    pub desc_detail2_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "23")]
    pub desc_detail2_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "24")]
    pub desc_detail2_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "25")]
    pub desc_detail2_en: ::prost::alloc::string::String,
    #[prost(string, tag = "26")]
    pub desc_detail2_kr: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MallChannelConfig {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub currency_platforms: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub free_jade_ids: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub paid_jade_ids: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub free_voucher_ids: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub paid_voucher_ids: ::prost::alloc::string::String,
    #[prost(uint32, tag = "7")]
    pub goods_id: u32,
    #[prost(string, tag = "8")]
    pub shelves_id: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub name: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MallMonthTicketInfo {
    #[prost(uint32, tag = "1")]
    pub id: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MatchShilianShilian {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub name: ::prost::alloc::string::String,
    #[prost(uint32, tag = "3")]
    pub ticket_id: u32,
    #[prost(uint32, tag = "4")]
    pub currency_id: u32,
    #[prost(uint32, tag = "5")]
    pub currency_count: u32,
    #[prost(uint32, tag = "6")]
    pub mode: u32,
    #[prost(uint32, tag = "7")]
    pub mode1: u32,
    #[prost(uint32, tag = "8")]
    pub mode2: u32,
    #[prost(int32, tag = "9")]
    pub init_point: i32,
    #[prost(int32, tag = "10")]
    pub back_point: i32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MatchShilianShilianReward {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub reward_id: u32,
    #[prost(uint32, tag = "3")]
    pub reward_count: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MatchShilianShilianTime {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub start: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub end: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MiscFunctionDailySignIn {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub reward_id: u32,
    #[prost(uint32, tag = "3")]
    pub reward_count: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct RankIntroduceRank {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, repeated, tag = "2")]
    pub info: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct RankIntroduceRank3 {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, repeated, tag = "2")]
    pub info: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SeasonSeason {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub start_time: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub end_time: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub disappear_time: ::prost::alloc::string::String,
    #[prost(uint32, tag = "5")]
    pub match_mode: u32,
    #[prost(uint32, tag = "6")]
    pub level_ticket_pool: u32,
    #[prost(uint32, tag = "7")]
    pub ticket_retry: u32,
    #[prost(uint32, tag = "8")]
    pub point_item_id: u32,
    #[prost(uint32, tag = "9")]
    pub point_consume: u32,
    #[prost(string, tag = "10")]
    pub desc_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "11")]
    pub desc_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "12")]
    pub desc_en: ::prost::alloc::string::String,
    #[prost(string, tag = "13")]
    pub desc_chs_t: ::prost::alloc::string::String,
    #[prost(uint32, tag = "14")]
    pub desktop_type: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SeasonLevelTicket {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub level: u32,
    #[prost(uint32, tag = "3")]
    pub game_count: u32,
    #[prost(uint32, tag = "4")]
    pub weight: u32,
    #[prost(uint32, repeated, tag = "5")]
    pub task: ::prost::alloc::vec::Vec<u32>,
    #[prost(string, tag = "6")]
    pub reward: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SeasonLevelTicketPool {
    #[prost(uint32, tag = "1")]
    pub pool_id: u32,
    #[prost(uint32, tag = "2")]
    pub level_lower: u32,
    #[prost(uint32, tag = "3")]
    pub level_upper: u32,
    #[prost(uint32, tag = "4")]
    pub ticket_level: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SeasonTicketRetry {
    #[prost(uint32, tag = "1")]
    pub group_id: u32,
    #[prost(uint32, tag = "2")]
    pub count: u32,
    #[prost(uint32, tag = "3")]
    pub cost: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SeasonSeasonReward {
    #[prost(uint32, tag = "1")]
    pub season_id: u32,
    #[prost(uint32, tag = "2")]
    pub rank_lower: u32,
    #[prost(uint32, tag = "3")]
    pub rank_upper: u32,
    #[prost(string, tag = "4")]
    pub rewards: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ShopsZhpGoods {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub icon: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub name_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub name_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub name_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub name_en: ::prost::alloc::string::String,
    #[prost(uint32, tag = "7")]
    pub item_id: u32,
    #[prost(string, tag = "8")]
    pub name_kr: ::prost::alloc::string::String,
    #[prost(int32, tag = "9")]
    pub buy_limit: i32,
    #[prost(uint32, tag = "10")]
    pub currency: u32,
    #[prost(uint32, tag = "11")]
    pub price: u32,
    #[prost(uint32, tag = "12")]
    pub need_amount: u32,
    #[prost(int32, tag = "15")]
    pub show_has: i32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ShopsZhpRefreshGroup {}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ShopsZhpRefreshPrice {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub refresh_price: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ShopsGoods {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub category: u32,
    #[prost(uint32, tag = "3")]
    pub category_goods: u32,
    #[prost(string, tag = "4")]
    pub icon: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub name_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub name_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub name_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub name_en: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub name_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "10")]
    pub desc_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "11")]
    pub desc_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "12")]
    pub desc_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "13")]
    pub desc_en: ::prost::alloc::string::String,
    #[prost(string, tag = "14")]
    pub desc_kr: ::prost::alloc::string::String,
    #[prost(uint32, tag = "15")]
    pub item_id: u32,
    #[prost(string, tag = "16")]
    pub price: ::prost::alloc::string::String,
    #[prost(uint32, tag = "17")]
    pub need_amount: u32,
    #[prost(int32, tag = "18")]
    pub buy_limit: i32,
    #[prost(int32, tag = "19")]
    pub show_has: i32,
    #[prost(uint32, tag = "20")]
    pub sort: u32,
    #[prost(uint32, tag = "21")]
    pub discount: u32,
    #[prost(uint32, tag = "22")]
    pub sell_activity: u32,
    #[prost(string, tag = "23")]
    pub launch_time: ::prost::alloc::string::String,
    #[prost(string, tag = "24")]
    pub func: ::prost::alloc::string::String,
    #[prost(uint32, tag = "25")]
    pub discount_activity: u32,
    #[prost(string, tag = "26")]
    pub zone: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ShopsGoodsPackage {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub good_id: u32,
    #[prost(uint32, tag = "3")]
    pub good_count: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ShopsIntervalRefreshGoods {
    #[prost(uint32, tag = "1")]
    pub group_id: u32,
    #[prost(uint32, tag = "2")]
    pub goods_id: u32,
    #[prost(uint32, tag = "3")]
    pub interval: u32,
    #[prost(uint32, tag = "4")]
    pub interval_type: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ShopsItemPackage {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub item_info: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SpotSpot {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub unique_id: u32,
    #[prost(uint32, tag = "3")]
    pub r#type: u32,
    #[prost(string, tag = "4")]
    pub name_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub name_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub name_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub name_en: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub name_kr: ::prost::alloc::string::String,
    #[prost(uint32, tag = "9")]
    pub level_limit: u32,
    #[prost(uint32, tag = "10")]
    pub is_married: u32,
    #[prost(string, tag = "11")]
    pub lock_tips_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "12")]
    pub lock_tips_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "13")]
    pub lock_tips_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "14")]
    pub lock_tips_en: ::prost::alloc::string::String,
    #[prost(string, tag = "15")]
    pub lock_tips_kr: ::prost::alloc::string::String,
    #[prost(uint32, tag = "16")]
    pub queque: u32,
    #[prost(string, tag = "17")]
    pub content_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "18")]
    pub content_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "19")]
    pub content_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "20")]
    pub content_en: ::prost::alloc::string::String,
    #[prost(string, tag = "21")]
    pub content_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "22")]
    pub content_path: ::prost::alloc::string::String,
    #[prost(uint32, repeated, tag = "23")]
    pub jieju: ::prost::alloc::vec::Vec<u32>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SpotRewards {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub r#type: u32,
    #[prost(string, tag = "3")]
    pub content_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub content_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub content_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub content_en: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub content_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub reward: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SpotEvent {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub activity_id: u32,
    #[prost(uint32, tag = "3")]
    pub key_item_id: u32,
    #[prost(uint32, tag = "4")]
    pub key_amount: u32,
    #[prost(uint32, tag = "5")]
    pub sort: u32,
    #[prost(string, tag = "6")]
    pub unlock_time: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub content_path: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub title_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub title_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "10")]
    pub title_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "11")]
    pub title_en: ::prost::alloc::string::String,
    #[prost(string, tag = "12")]
    pub title_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "13")]
    pub subtitle_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "14")]
    pub subtitle_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "15")]
    pub subtitle_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "16")]
    pub subtitle_en: ::prost::alloc::string::String,
    #[prost(string, tag = "17")]
    pub subtitle_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "18")]
    pub content_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "19")]
    pub content_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "20")]
    pub content_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "21")]
    pub content_en: ::prost::alloc::string::String,
    #[prost(string, tag = "22")]
    pub content_kr: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SpotCharacterSpot {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub sort: u32,
    #[prost(string, tag = "3")]
    pub name_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub name_chs2: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub name_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub name_chs_t2: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub name_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub name_jp2: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub name_en: ::prost::alloc::string::String,
    #[prost(string, tag = "10")]
    pub name_kr: ::prost::alloc::string::String,
    #[prost(uint32, tag = "11")]
    pub open: u32,
    #[prost(uint32, tag = "12")]
    pub init_skin: u32,
    #[prost(uint32, tag = "13")]
    pub full_fetter_skin: u32,
    #[prost(uint32, tag = "14")]
    pub hand: u32,
    #[prost(uint32, tag = "15")]
    pub favorite: u32,
    #[prost(string, tag = "16")]
    pub star_5_material: ::prost::alloc::string::String,
    #[prost(uint32, tag = "17")]
    pub star_5_cost: u32,
    #[prost(uint32, tag = "18")]
    pub can_marry: u32,
    #[prost(uint32, tag = "19")]
    pub exchange_item_id: u32,
    #[prost(int32, tag = "20")]
    pub exchange_item_num: i32,
    #[prost(string, tag = "21")]
    pub emo: ::prost::alloc::string::String,
    #[prost(uint32, tag = "22")]
    pub sound: u32,
    #[prost(float, tag = "23")]
    pub sound_volume: f32,
    #[prost(uint32, tag = "24")]
    pub sex: u32,
    #[prost(string, tag = "25")]
    pub desc_stature_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "26")]
    pub desc_stature_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "27")]
    pub desc_stature_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "28")]
    pub desc_stature_en: ::prost::alloc::string::String,
    #[prost(string, tag = "29")]
    pub desc_stature_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "30")]
    pub desc_birth_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "31")]
    pub desc_birth_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "32")]
    pub desc_birth_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "33")]
    pub desc_birth_en: ::prost::alloc::string::String,
    #[prost(string, tag = "34")]
    pub desc_birth_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "35")]
    pub desc_age_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "36")]
    pub desc_age_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "37")]
    pub desc_age_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "38")]
    pub desc_age_en: ::prost::alloc::string::String,
    #[prost(string, tag = "39")]
    pub desc_age_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "40")]
    pub desc_bloodtype_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "41")]
    pub desc_bloodtype_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "42")]
    pub desc_bloodtype_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "43")]
    pub desc_bloodtype_en: ::prost::alloc::string::String,
    #[prost(string, tag = "44")]
    pub desc_bloodtype_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "45")]
    pub desc_cv_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "46")]
    pub desc_cv_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "47")]
    pub desc_cv_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "48")]
    pub desc_cv_en: ::prost::alloc::string::String,
    #[prost(string, tag = "49")]
    pub desc_cv_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "50")]
    pub desc_hobby_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "51")]
    pub desc_hobby_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "52")]
    pub desc_hobby_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "53")]
    pub desc_hobby_en: ::prost::alloc::string::String,
    #[prost(string, tag = "54")]
    pub desc_hobby_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "55")]
    pub desc_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "56")]
    pub desc_item_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "57")]
    pub desc_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "58")]
    pub desc_item_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "59")]
    pub desc_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "60")]
    pub desc_item_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "61")]
    pub desc_en: ::prost::alloc::string::String,
    #[prost(string, tag = "62")]
    pub desc_item_en: ::prost::alloc::string::String,
    #[prost(string, tag = "63")]
    pub desc_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "64")]
    pub desc_item_kr: ::prost::alloc::string::String,
    #[prost(uint32, tag = "65")]
    pub collaboration: u32,
    #[prost(uint32, repeated, tag = "66")]
    pub skin_lib: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "67")]
    pub ur: u32,
    #[prost(uint32, tag = "68")]
    pub ur_ron: u32,
    #[prost(uint32, tag = "69")]
    pub ur_liqi: u32,
    #[prost(string, tag = "70")]
    pub ur_cutin: ::prost::alloc::string::String,
    #[prost(uint32, tag = "71")]
    pub limited: u32,
    #[prost(uint32, tag = "72")]
    pub treasure_sp: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SpotSkinSpot {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub r#type: u32,
    #[prost(string, tag = "3")]
    pub name_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub name_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub name_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub name_en: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub name_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub desc_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub desc_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "10")]
    pub desc_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "11")]
    pub desc_en: ::prost::alloc::string::String,
    #[prost(string, tag = "12")]
    pub desc_kr: ::prost::alloc::string::String,
    #[prost(uint32, tag = "13")]
    pub character_id: u32,
    #[prost(string, tag = "14")]
    pub lock_tips_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "15")]
    pub lock_tips_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "16")]
    pub lock_tips_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "17")]
    pub lock_tips_en: ::prost::alloc::string::String,
    #[prost(string, tag = "18")]
    pub lock_tips_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "19")]
    pub path: ::prost::alloc::string::String,
    #[prost(uint32, tag = "20")]
    pub exchange_item_id: u32,
    #[prost(int32, tag = "21")]
    pub exchange_item_num: i32,
    #[prost(uint32, tag = "22")]
    pub direction: u32,
    #[prost(uint32, tag = "23")]
    pub no_reverse: u32,
    #[prost(uint32, tag = "24")]
    pub lock_reverse: u32,
    #[prost(int32, tag = "25")]
    pub offset_x: i32,
    #[prost(int32, tag = "26")]
    pub offset_y: i32,
    #[prost(string, tag = "27")]
    pub spot_scale: ::prost::alloc::string::String,
    #[prost(string, tag = "28")]
    pub effective_time: ::prost::alloc::string::String,
    #[prost(string, tag = "29")]
    pub lobby_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "30")]
    pub liaoshe_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "31")]
    pub shop_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "32")]
    pub win_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "33")]
    pub gameend_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "34")]
    pub starup_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "35")]
    pub treasure_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "36")]
    pub ck_full_0_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "37")]
    pub ck_full_1_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "38")]
    pub ck_full_2_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "39")]
    pub ck_full_3_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "40")]
    pub ck_full_single_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "41")]
    pub ck_half_0_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "42")]
    pub ck_half_1_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "43")]
    pub ck_half_2_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "44")]
    pub ck_half_3_offset: ::prost::alloc::string::String,
    #[prost(string, tag = "45")]
    pub ck_half_single_offset: ::prost::alloc::string::String,
    #[prost(int32, tag = "46")]
    pub smallhead_x: i32,
    #[prost(int32, tag = "47")]
    pub smallhead_y: i32,
    #[prost(int32, tag = "48")]
    pub smallhead_width: i32,
    #[prost(int32, tag = "49")]
    pub full_x: i32,
    #[prost(int32, tag = "50")]
    pub full_y: i32,
    #[prost(int32, tag = "51")]
    pub full_width: i32,
    #[prost(int32, tag = "52")]
    pub full_height: i32,
    #[prost(int32, tag = "53")]
    pub half_x: i32,
    #[prost(int32, tag = "54")]
    pub half_y: i32,
    #[prost(int32, tag = "55")]
    pub half_width: i32,
    #[prost(int32, tag = "56")]
    pub half_height: i32,
    #[prost(int32, tag = "57")]
    pub spine_type: i32,
    #[prost(int32, tag = "58")]
    pub spine_width: i32,
    #[prost(int32, tag = "59")]
    pub spine_height: i32,
    #[prost(int32, tag = "60")]
    pub pivot_x: i32,
    #[prost(int32, tag = "61")]
    pub pivot_y: i32,
    #[prost(string, tag = "62")]
    pub idle: ::prost::alloc::string::String,
    #[prost(int32, tag = "63")]
    pub greeting: i32,
    #[prost(int32, tag = "64")]
    pub celebrate: i32,
    #[prost(int32, tag = "65")]
    pub click: i32,
    #[prost(int32, tag = "66")]
    pub greeting_init: i32,
    #[prost(int32, tag = "67")]
    pub click2: i32,
    #[prost(int32, tag = "68")]
    pub celebrate_idle: i32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SpotAudioSpot {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub path: ::prost::alloc::string::String,
    #[prost(float, tag = "3")]
    pub time_length: f32,
    #[prost(string, tag = "4")]
    pub str: ::prost::alloc::string::String,
    #[prost(uint32, tag = "5")]
    pub r#type: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct StrStr {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub r#type: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub chs: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub jp: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub en: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub kr: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct StrEvent {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub r#type: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub chs: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub jp: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub en: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub kr: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct TournamentTournaments {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub name: ::prost::alloc::string::String,
    #[prost(uint32, tag = "3")]
    pub game_ticket_id: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct TutorialInit {
    #[prost(uint32, tag = "1")]
    pub episode_id: u32,
    #[prost(string, tag = "2")]
    pub dora: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub rival: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub init_score: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub paihe: ::prost::alloc::string::String,
    #[prost(uint32, tag = "6")]
    pub chang: u32,
    #[prost(uint32, tag = "7")]
    pub ju: u32,
    #[prost(uint32, tag = "8")]
    pub benchang: u32,
    #[prost(uint32, tag = "9")]
    pub first_position: u32,
    #[prost(uint32, tag = "10")]
    pub view_position: u32,
    #[prost(string, tag = "11")]
    pub start_shoupai: ::prost::alloc::string::String,
    #[prost(string, tag = "12")]
    pub start_ming: ::prost::alloc::string::String,
    #[prost(string, tag = "13")]
    pub end_shoupai: ::prost::alloc::string::String,
    #[prost(string, tag = "14")]
    pub end_ming: ::prost::alloc::string::String,
    #[prost(string, tag = "15")]
    pub end_yaku: ::prost::alloc::string::String,
    #[prost(string, tag = "16")]
    pub ura_dora: ::prost::alloc::string::String,
    #[prost(uint32, tag = "17")]
    pub end_fu: u32,
    #[prost(uint32, tag = "18")]
    pub hu_score: u32,
    #[prost(string, tag = "19")]
    pub flow_score: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct TutorialStep {
    #[prost(uint32, tag = "1")]
    pub episode_id: u32,
    #[prost(uint32, tag = "2")]
    pub id: u32,
    #[prost(uint32, tag = "3")]
    pub seat: u32,
    #[prost(uint32, tag = "4")]
    pub act_type: u32,
    #[prost(string, tag = "5")]
    pub act_param: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub tingpai_param: ::prost::alloc::string::String,
    #[prost(uint32, tag = "7")]
    pub is_zhenting: u32,
    #[prost(uint32, tag = "8")]
    pub str_type: u32,
    #[prost(uint32, tag = "9")]
    pub str_id: u32,
    #[prost(uint32, tag = "10")]
    pub view_ui_hand: u32,
    #[prost(string, tag = "11")]
    pub pic_path: ::prost::alloc::string::String,
    #[prost(string, tag = "12")]
    pub button_show: ::prost::alloc::string::String,
    #[prost(string, tag = "13")]
    pub button_pai: ::prost::alloc::string::String,
    #[prost(uint32, tag = "14")]
    pub player_act: u32,
    #[prost(string, tag = "15")]
    pub player_param: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct VipVip {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub name_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub name_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub name_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub name_en: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub name_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub img: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub desc_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub desc_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "10")]
    pub desc_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "11")]
    pub desc_en: ::prost::alloc::string::String,
    #[prost(string, tag = "12")]
    pub desc_kr: ::prost::alloc::string::String,
    #[prost(uint32, tag = "13")]
    pub charge: u32,
    #[prost(uint32, tag = "14")]
    pub gift_limit: u32,
    #[prost(uint32, tag = "15")]
    pub friend_added: u32,
    #[prost(uint32, tag = "16")]
    pub shop_free_refresh: u32,
    #[prost(uint32, tag = "17")]
    pub shop_refresh_limit: u32,
    #[prost(uint32, tag = "18")]
    pub buddy_bonus: u32,
    #[prost(uint32, tag = "19")]
    pub favourite_limit: u32,
    #[prost(uint32, tag = "20")]
    pub title_id: u32,
    #[prost(string, repeated, tag = "21")]
    pub rewards: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct VoiceSound {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub name_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub name_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub name_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub name_en: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub name_kr: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub words_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub words_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub words_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "10")]
    pub words_en: ::prost::alloc::string::String,
    #[prost(string, tag = "11")]
    pub words_kr: ::prost::alloc::string::String,
    #[prost(uint32, tag = "12")]
    pub category: u32,
    #[prost(string, tag = "13")]
    pub r#type: ::prost::alloc::string::String,
    #[prost(uint32, tag = "14")]
    pub level_limit: u32,
    #[prost(uint32, tag = "15")]
    pub bond_limit: u32,
    #[prost(float, tag = "16")]
    pub time_length: f32,
    #[prost(string, tag = "17")]
    pub path: ::prost::alloc::string::String,
    #[prost(uint32, tag = "18")]
    pub hide: u32,
    #[prost(string, tag = "19")]
    pub date_limit: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct VoiceEvent {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub words_chs: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub words_chs_t: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub words_jp: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub words_en: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub words_kr: ::prost::alloc::string::String,
    #[prost(uint32, tag = "7")]
    pub category: u32,
    #[prost(string, tag = "8")]
    pub r#type: ::prost::alloc::string::String,
    #[prost(uint32, tag = "9")]
    pub stage: u32,
    #[prost(float, tag = "10")]
    pub time_length: f32,
    #[prost(string, tag = "11")]
    pub path: ::prost::alloc::string::String,
    #[prost(float, tag = "12")]
    pub volume_fix: f32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct VoiceSpot {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub character: u32,
    #[prost(uint32, tag = "3")]
    pub r#type: u32,
    #[prost(string, tag = "4")]
    pub path: ::prost::alloc::string::String,
}
