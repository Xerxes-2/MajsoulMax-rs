// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Field {
    #[prost(string, tag = "1")]
    pub field_name: ::prost::alloc::string::String,
    /// 数组长度（数组有效）
    #[prost(uint32, tag = "2")]
    pub array_length: u32,
    /// 类型
    #[prost(string, tag = "3")]
    pub pb_type: ::prost::alloc::string::String,
    /// 存储的pb下标
    #[prost(uint32, tag = "4")]
    pub pb_index: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SheetMeta {
    #[prost(string, tag = "1")]
    pub category: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub key: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SheetSchema {
    #[prost(string, tag = "1")]
    pub name: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "2")]
    pub meta: ::core::option::Option<SheetMeta>,
    #[prost(message, repeated, tag = "3")]
    pub fields: ::prost::alloc::vec::Vec<Field>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct TableSchema {
    #[prost(string, tag = "1")]
    pub name: ::prost::alloc::string::String,
    #[prost(message, repeated, tag = "2")]
    pub sheets: ::prost::alloc::vec::Vec<SheetSchema>,
}
/// 单张表结构的数据内容
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SheetData {
    #[prost(string, tag = "1")]
    pub table: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub sheet: ::prost::alloc::string::String,
    #[prost(bytes = "vec", repeated, tag = "3")]
    pub data: ::prost::alloc::vec::Vec<::prost::alloc::vec::Vec<u8>>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ConfigTables {
    /// 版本 x.y.z
    #[prost(string, tag = "1")]
    pub version: ::prost::alloc::string::String,
    /// 结构hash值
    #[prost(string, tag = "2")]
    pub header_hash: ::prost::alloc::string::String,
    /// 所有表结构
    #[prost(message, repeated, tag = "3")]
    pub schemas: ::prost::alloc::vec::Vec<TableSchema>,
    /// 所有表数据
    #[prost(message, repeated, tag = "4")]
    pub datas: ::prost::alloc::vec::Vec<SheetData>,
}
